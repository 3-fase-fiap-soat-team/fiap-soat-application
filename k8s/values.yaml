# Default values for soat-tech-challenge.
replicaCount: 1

image:
  repository: 102306345761.dkr.ecr.us-east-1.amazonaws.com/soat-tc
  pullPolicy: Always
  tag: "latest"

imagePullSecrets:
  - name: ecr-secret


nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels:
  workload.user.cattle.io/workloadselector: apps.deployment-fiap-soat-tech-challenge

podSecurityContext: {}

securityContext:
  allowPrivilegeEscalation: false
  privileged: false
  readOnlyRootFilesystem: false
  runAsNonRoot: false

service:
  type: ClusterIP
  port: 3000

configMap:
  enabled: true
  data:
    DATABASE_HOST: "soat-tech-challenge-postgresql"
    DATABASE_PORT: "5432"
    DATABASE_USERNAME: "postgres"
    DATABASE_NAME: "postgres"
    MERCADO_PAGO_API: "https://api.mercadopago.com"
    MERCADO_PAGO_USER_ID: "2440649940118"
    MERCADO_PAGO_EXTERNAL_POS_ID: "12345885678"
    NOTIFICATION_URL: "https://frank-raptor-vastly.ngrok-free.app/webhook/mercadopago"

secret:
  enabled: true
  data:
    DATABASE_PASSWORD: "postgres"
    MERCADO_PAGO_ACCESS_TOKEN: "APP_USR-76381980995559120330-051416-274c5c4d7231992cc992c641091bf5a2-2440640118"
    MERCADO_PAGO_SECRET: "b0762f9c72f7512cd6dadsefs84149408558cca11fe7b81f35c5eca37c59ac00e49e7f"

env: []

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%

progressDeadlineSeconds: 600
revisionHistoryLimit: 10
terminationGracePeriodSeconds: 30

ingress:
  enabled: true
  className: nginx
  host: fiap.gomesprogramador.com.br
  path: /
  pathType: Prefix
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  tls:
    secretName: wildcard-crt-secret

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

livenessProbe: {}
readinessProbe: {}

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

volumes: []
volumeMounts: []

nodeSelector: {}
tolerations: []
affinity: {}

# Migration job configuration
migration:
  enabled: true
  backoffLimit: 3
  resources:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 1
      memory: 1Gi

# PostgreSQL dependency configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres"
    username: "postgres"
    password: "postgres"
    database: "postgres"
  primary:
    persistence:
      enabled: true
      size: 8Gi